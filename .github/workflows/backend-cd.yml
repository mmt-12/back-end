name: backend-cd

on:
  push:
    branches: ["develop", "main"]
    tags: ["v*"]
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to deploy"
        required: true
        default: "dev"
        type: choice
        options: ["dev", "prod"]

concurrency:
  group: backend-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy_dev:
    name: Deploy (dev)
    runs-on: ubuntu-latest
    environment: dev
    if: >
      github.event_name == 'workflow_dispatch' && inputs.env == 'dev' ||
      github.ref == 'refs/heads/develop'
    defaults:
      run:
        working-directory: memento
    env:
      SSH_PORT: ${{ secrets.SSH_PORT }}

    steps:
      - uses: actions/checkout@v4

      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      - name: Set up Java 21 (Temurin)
        uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: 21 }

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with: { build-root-directory: memento }

      - name: Write Firebase service account (if provided)
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: |
          mkdir -p src/main/resources
          if [ -n "${FIREBASE_CONFIG:-}" ]; then
            printf '%s' "${FIREBASE_CONFIG}" > src/main/resources/memento-serviceAccountKey.json
          else
            echo '{}' > src/main/resources/memento-serviceAccountKey.json
          fi

      - name: Build JAR (bootJar → jar fallback)
        run: |
          ./gradlew clean bootJar --no-daemon -x test -x asciidoctor || ./gradlew clean jar --no-daemon -x test -x asciidoctor
          mkdir -p out && cp build/libs/*.jar out/app.jar

      - name: Prepare metadata
        id: meta
        run: echo "RELEASE_ID=$(date -u +%Y%m%d%H%M%S)-${GITHUB_SHA::7}-dev" >> $GITHUB_OUTPUT

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known_hosts (supports custom port if present)
        run: |
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH connectivity
        run: |
          ssh \
            "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}" \
            "echo Connected as \$(whoami) on \$(hostname)"

      - name: Upload JAR via scp
        run: |
          scp -O -P "${SSH_PORT:-22}" \
            out/app.jar \
            "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/tmp/app.jar.${{ steps.meta.outputs.RELEASE_ID }}"

      - name: Run remote deploy (dev)
        run: |
          ssh \
            "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}" \
            "
            chmod 777 /tmp/app.jar.${{ steps.meta.outputs.RELEASE_ID }} && \
            mkdir -p ~/apps/backend/releases/${{ steps.meta.outputs.RELEASE_ID }} && \
             ~/apps/backend/deploy_backend.sh dev ${{ steps.meta.outputs.RELEASE_ID }} 180"

  deploy_prod:
    name: Deploy (prod)
    runs-on: ubuntu-latest
    environment: prod
    if: >
      github.event_name == 'workflow_dispatch' && inputs.env == 'prod' ||
      startsWith(github.ref, 'refs/heads/main') ||
      startsWith(github.ref, 'refs/tags/v')
    defaults:
      run:
        working-directory: memento
    env:
      SSH_PORT: ${{ secrets.SSH_PORT }}

    steps:
      - uses: actions/checkout@v4

      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      - name: Set up Java 21 (Temurin)
        uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: 21 }

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with: { build-root-directory: memento }

      - name: Write Firebase service account (if provided)
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: |
          mkdir -p src/main/resources
          if [ -n "${FIREBASE_CONFIG:-}" ]; then
            printf '%s' "${FIREBASE_CONFIG}" > src/main/resources/memento-serviceAccountKey.json
          else
            echo '{}' > src/main/resources/memento-serviceAccountKey.json
          fi

      - name: Build JAR (bootJar → jar fallback)
        run: |
          ./gradlew clean bootJar --no-daemon -x test -x asciidoctor || ./gradlew clean jar --no-daemon -x test -x asciidoctor
          mkdir -p out && cp build/libs/*.jar out/app.jar

      - name: Prepare metadata
        id: meta
        run: echo "RELEASE_ID=$(date -u +%Y%m%d%H%M%S)-${GITHUB_SHA::7}-prod" >> $GITHUB_OUTPUT

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known_hosts (supports custom port if present)
        run: |
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH connectivity
        run: |
          ssh \
            "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}" \
            "echo Connected as \$(whoami) on \$(hostname)"

      - name: Upload JAR via scp
        run: |
          scp -O -P "${SSH_PORT:-22}" \
            out/app.jar \
            "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/tmp/app.jar.${{ steps.meta.outputs.RELEASE_ID }}"

      - name: Run remote deploy (prod)
        run: |
          ssh \
            "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}" \
            "mkdir -p ~/apps/backend/releases/${{ steps.meta.outputs.RELEASE_ID }} && \
             ~/apps/backend/deploy_backend.sh prod ${{ steps.meta.outputs.RELEASE_ID }} 180"
